---
import Navbar from '../components/Navbar.astro'
// import { ViewTransitions } from 'astro:transitions'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/images/logo/logo-light.png" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
    <!-- <ViewTransitions /> -->
    <title>{title}</title>
  </head>
  <body class="size-full dark:bg-black dark:text-white overflow-y-scroll">
    <!-- <Navbar isScreenContainer /> -->
    <slot />
  </body>
</html>
<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  body {
    font-family: 'Inter', sans-serif;
  }
</style>
<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }
  window.localStorage.setItem('theme', theme)
</script>

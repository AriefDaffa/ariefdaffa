---
// components/TableOfContents.astro
export interface Props {
  headings: {
    depth: number;
    slug: string;
    text: string;
  }[];
}

const { headings } = Astro.props;
---

<div class="w-1/3 h-min p-4 sticky top-16 border-[1px] rounded-md">
    <div class="text-xl font-semibold">Table of Contents</div>
    <ul class="list-disc pl-4">
        {headings.map((heading) => (
          <li class={`ml-${heading.depth * 2}`} id={`toc-${heading.slug}`}>
            <a href={`#${heading.slug}`} class="toc-link  hover:underline">{heading.text}</a>
          </li>
        ))}
      </ul>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      root: null, // Use the viewport as the root
      rootMargin: '0px',
      threshold: 0.1 // Trigger when 10% of the section is in view
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        const tocLink = document.querySelector(`#toc-${entry.target.id} .toc-link`);
        if (entry.isIntersecting) {
          tocLink?.classList.add('font-bold'); // Apply bold class when the section is in view
        } else {
          tocLink?.classList.remove('font-bold'); // Remove the bold class when the section is out of view
        }
      });
    }, observerOptions);

    const sections = document.querySelectorAll('main .prose h1, main .prose h2, main .prose h3');
    sections.forEach(section => {
      section.id && observer.observe(section); // Observe each section heading with an ID
    });
  });
</script>
